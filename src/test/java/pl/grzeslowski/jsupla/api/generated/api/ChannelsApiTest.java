/*
 * SUPLA Cloud API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package pl.grzeslowski.jsupla.api.generated.api;

import org.junit.Ignore;
import org.junit.Test;
import pl.grzeslowski.jsupla.api.generated.ApiException;
import pl.grzeslowski.jsupla.api.generated.model.Channel;
import pl.grzeslowski.jsupla.api.generated.model.ChannelExecuteActionRequest;
import pl.grzeslowski.jsupla.api.generated.model.ChannelUpdateRequest;
import pl.grzeslowski.jsupla.api.generated.model.Schedule;

import java.io.File;
import java.util.List;

/**
 * API tests for ChannelsApi
 */
@Ignore
public class ChannelsApiTest {

    private final ChannelsApi api = new ChannelsApi();

    
    /**
     * Execute action on the channel
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void executeActionTest() throws ApiException {
        Integer id = null;
        ChannelExecuteActionRequest body = null;
        api.executeAction(id, body);

        // TODO: test validations
    }
    
    /**
     * Get channel by ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChannelTest() throws ApiException {
        Integer id = null;
        List<String> include = null;
        Channel response = api.getChannel(id, include);

        // TODO: test validations
    }
    
    /**
     * Get measurement logs.
     *
     * Supported channel functions: &#x60;THERMOMETER&#x60; and &#x60;HUMIDITYANDTEMPERATURE&#x60;. Logs ordered by date, descending.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChannelMeasurementLogsTest() throws ApiException {
        Integer id = null;
        Integer limit = null;
        Integer offset = null;
        List<Object> response = api.getChannelMeasurementLogs(id, limit, offset);

        // TODO: test validations
    }
    
    /**
     * Get measurement logs as zipped CSV file.
     *
     * Supported channel functions: &#x60;THERMOMETER&#x60; and &#x60;HUMIDITYANDTEMPERATURE&#x60;. Logs ordered by date, descending.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChannelMeasurementLogsCsvFileTest() throws ApiException {
        Integer id = null;
        File response = api.getChannelMeasurementLogsCsvFile(id);

        // TODO: test validations
    }
    
    /**
     * Get schedules list of the channel
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChannelSchedulesTest() throws ApiException {
        Integer id = null;
        List<String> include = null;
        List<Schedule> response = api.getChannelSchedules(id, include);

        // TODO: test validations
    }
    
    /**
     * Get channels list
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getChannelsTest() throws ApiException {
        List<String> include = null;
        List<String> function = null;
        String io = null;
        Boolean hasFunction = null;
        List<Channel> response = api.getChannels(include, function, io, hasFunction);

        // TODO: test validations
    }
    
    /**
     * Update channel
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateChannelTest() throws ApiException {
        Integer id = null;
        ChannelUpdateRequest body = null;
        Channel response = api.updateChannel(id, body);

        // TODO: test validations
    }
    
}
